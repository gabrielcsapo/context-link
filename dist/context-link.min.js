require=function b(c,d,e){function a(h,i){if(!d[h]){if(!c[h]){var j="function"==typeof require&&require;if(!i&&j)return j(h,!0);if(g)return g(h,!0);var k=new Error("Cannot find module '"+h+"'");throw k.code="MODULE_NOT_FOUND",k}var f=d[h]={exports:{}};c[h][0].call(f.exports,function(b){var d=c[h][1][b];return a(d?d:b)},f,f.exports,b,c,d,e)}return d[h].exports}for(var g="function"==typeof require&&require,f=0;f<e.length;f++)a(e[f]);return a}({1:[function(a,b){function c(a){this.data=a,this.parent=null,this.children=[]}b.exports=class{constructor(a){var b=new c(a);this._root=b}traverse(a){for(var b=[this._root],c=b.shift();c;){for(var d=0,e=c.children.length;d<e;d++)b.push(c.children[d]);a(c),c=b.shift()}}contains(a){this.traverse.call(this,a)}add(a,b){var d=this,e=new c(a),f=null;if(d.contains(function(a){a.data===b&&(f=a)},this.traverse),f)f.children.push(e),e.parent=f;else throw new Error("Cannot add node to a non-existent parent.")}findIndex(a,b){for(var c,d=0;d<a.length;d++)a[d].data==b&&(c=1);return c}remove(a,b){var c=this,d=null,e=null,f=null;if(c.contains(function(a){a.data===b&&(d=a)}),!d)throw new Error("Parent does not exist");else if(f=c.findIndex(d.children,a),void 0==f)throw new Error("Node to remove does not exist.");else e=d.children.splice(f,1);return e}}},{}],"context-link":[function(a,b){const c=a("./lib/tree");b.exports=class{constructor(a){this.trees=[],a.forEach((b)=>{for(var a=b.split(" "),d=new c(a[0]),e=1;e<a.length;e++)d.add(a[e],a[e-1]);this.trees.push(d)})}find(a){var b={};return a?(this.trees.forEach((c,e)=>{var f=0;c.contains((c)=>{a===c.data&&(b[c.data]?b[c.data].push({entry:c,index:e,position:f}):b[c.data]=[{entry:c,index:e,position:f}]),f+=1})}),b):(this.trees.forEach((a,c)=>{a.traverse((a)=>{var e=a.data;this.trees.forEach((a,f)=>{if(c!=f){var g=0;a.contains((a)=>{a.data===e&&(b[e]?b[e].push({entry:c,index:f,position:g}):b[e]=[{entry:c,index:f,position:g}]),g+=1})}})})}),b)}}},{"./lib/tree":1}]},{},[]);